apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops
  namespace: openshift-gitops
spec:
  image: 'registry.redhat.io/openshift-gitops-1/argocd-rhel8'
  version: 'v1.4.4-6'
#  initialRepositories: |
#    - url: https://github.com/argoproj/my-private-repository
#      passwordSecret:
#        name: my-secret
#        key: password
#      usernameSecret:
#        name: my-secret
#        key: username
  applicationSet:
    image: 'registry.redhat.io/openshift-gitops-1/applicationset-rhel8'
    version: 'v1.4.4-6'
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    image: 'registry.redhat.io/openshift-gitops-1/argocd-rhel8'
    version: 'v1.4.4-6'
    processors: {}
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 1Gi
    sharding: {}
  dex:
    image: 'registry.redhat.io/openshift-gitops-1/dex-rhel8'
    version: 'v1.4.4-6'
    openShiftOAuth: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    policy: g, system:cluster-admins, role:admin
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    image: 'registry.redhat.io/openshift-gitops-1/argocd-rhel8'
    version: 'v1.4.4-6'
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceCustomizations: |
    bitnami.com/SealedSecret:
      health.lua: |
        hs = {}
        hs.status = "Healthy"
        hs.message = "Controller doesnt report status"
        return hs
    route.openshift.io/Route:
      ignoreDifferences: |
        jsonPointers:
        - /spec/host
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    insecure: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
    service:
      type: ""
  tls:
    ca: {}
